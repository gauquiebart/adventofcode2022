function split(str, index) {
    return [str.slice(0, index), str.slice(index)];
}

const findUniqueItemAppearingInBothCompartments = function (input) {
    const [[...compartment1], [...compartment2]] = split(input, input.length / 2);
    return compartment1.filter(character => compartment2.indexOf(character) > -1)[0];
}

const findUniqueItemAppearingInEachBackpack = function (array) {
    return [...array[0]]
        .filter(character => [...array[1]].indexOf(character) > -1)
        .filter(character => [...array[2]].indexOf(character) > -1)[0];
}

const alphabetUpper = Array.from(Array(26))
    .map((e, i) => i + 65)
    .map((x) => String.fromCharCode(x));
const alphabetLower = Array.from(Array(26))
    .map((e, i) => i + 97)
    .map((x) => String.fromCharCode(x));

const scoreForItem = function (item) {
    const indexLower = alphabetLower.indexOf(item);
    const indexUpper = alphabetUpper.indexOf(item);
    return (indexLower > -1 ? indexLower + 1 : 0)
        + (indexUpper > -1 ? indexUpper + 1 + 26 : 0);
}

const sumOfPrioritiesForEachLine = function (input) {
    return input.split("\n")
        .map(findUniqueItemAppearingInBothCompartments)
        .map(scoreForItem)
        .reduce((accumulator, currentValue) => accumulator + currentValue, 0);
}

const chunk = function (array, chunkSize) {
    const result = [];
    for (let i = 0; i < array.length; i += chunkSize) {
        const chunk = array.slice(i, i + chunkSize);
        result.push(chunk);
    }
    return result;
}

const sumOfPrioritiesPerThreeLines = function (input) {
    const splittedPerLine = input.split('\n');
    return chunk(splittedPerLine, 3)
        .map(findUniqueItemAppearingInEachBackpack)
        .map(scoreForItem)
        .reduce((accumulator, currentValue) => accumulator + currentValue, 0);
}

test('findUniqueItemAppearingInBothCompartments', () => {
    expect(findUniqueItemAppearingInBothCompartments('vJrwpWtwJgWrhcsFMMfFFhFp')).toEqual("p");
    expect(findUniqueItemAppearingInBothCompartments('jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL')).toEqual("L");
});

test('sum of priorities for test input on each line', () => {
    expect(sumOfPrioritiesForEachLine(testInput)).toEqual(157);
});

test('sum of priorities for test input per three lines', () => {
    expect(sumOfPrioritiesPerThreeLines(testInput)).toEqual(70);
});

test('sum of priorities for puzzle input on each line', () => {
    expect(sumOfPrioritiesForEachLine(puzzleInput)).toEqual(7821);
});

test('sum of priorities for puzzle input per three lines', () => {
    expect(sumOfPrioritiesPerThreeLines(puzzleInput)).toEqual(2752);
});


const testInput = `vJrwpWtwJgWrhcsFMMfFFhFp
jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL
PmmdzqPrVvPwwTWBwg
wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn
ttgJtRGJQctTZtZT
CrZsJsPPZsGzwwsLwLmpwMDw`;

const puzzleInput = `hDsDDttbhsmshNNWMNWGbTNqZq
VQfjnlFvnQFRdZWdVtqMGdWW
zvvvRnFFfjjlRBlBPzgQgRvvmtrmhHcptLHCDhcHHmLsBmsB
FrzFvvdTDcTnmTzdDTTzdvWmjhgVPrhSljSQSPwPjPjPjSVC
sMsGbqGsbbRqRbBMBGRMbLpNSSpjhlQljHVClhjgPjjPhlVp
sNbGtJbMfssNtvcnWFVmnvDd
TNfmdFJmfdZMQffVRQVV
jVHBCcDSjWrMZjvg
SShSbCGpcBtBtwtVLJJddmtLmT
CtpNftbNWbtSJDHqGZJFLfLr
dPsHlsRBHcZdqDFDZwwJ
snjVlvTPlPjVlQlHWjpSmzgNNzSmtpSm
qhZtSVqCqThGcGzZnnfZcB
WbddWbDwrBzcpzHpBb
DBBMFWRJDrDFWLWljCqjQjFvtCsqTjqs
vhFTzRzzTmPvbplWFtQttQQZtZhMZqcqSQ
fJVCfDfJNCLDwJNGmssZgwqgZcmtgcms
VmdVNLHGGVDBdfLCHnLGHnbWpTplWbddRTlzplWPpbFp
smwtNVqRjNmZjZBDSvzSzl
FnTJFcTTFccCrJGTLncdCCcPJZfBBDSlSJwZDlggSffvgSSf
FWTFGLFWLCPWrCnFnQWNbQVVwphhmHHbptVsss
BrrgrtgfBpPFhhgMWq
ZGvsvDGClvsSRScpGBhPphWMPhhTNh
SBSBdBZCcdwHrVQwQr
qmFqdVtqsVdzqGbwMJwGPpmPHM
ZjTjLQLLDrrLjcFhlfrGHppfbJwGpMMpGHwRCC
BTlZjrBBBcLTcDrjBlThWBjBtWNqnSzSnsSdvsFggNnqVVnv
zVvmjGgpcJnbTTTJHRHSRb
NPFrFQfCLPrdRlbtQRRvBtHb
frMLqPFMrfrPLCwqqNvjczwwnmwggGmssnmnnm
HbFJhhshsffcvslmGmLFrQBrlFTG
jNRPwwPjSPCdCdvRzRBTlRzmGrmB
nCSWdNjCCPqvtttZnDscth
ScSrRTPcSSDRWSptWcdmmWGbmGGLmLJvNJNbbJ
flzHjFpZjFfjjgszjlqzJNnnvsmbMmGvJLNNbmJv
jFZFVpffpVlqfQhgtTwcTVtrTcRBwBTD
rHrdGSMSSbZbjShj
qZfDBBvllvvWLtqbbQwhJjbtwbnQgN
WzWlzZmLWBLZLzCzrHMVcRrMRFRCCccF
BzdplppDlBBrqWnjFMBWqNWq
whZhZSSHhhVSrvSgHPvgvjnFTPsFFnnNTcjTFnTTsc
HLCwVSfZLffSHhLvwtQbJbrdGlRRrGdmpztG
grDFfDlfCftCzCfNztclNFrBNQjbZjJjjPPVsjNvsbvPsj
HwwTpGpRwMdpHWhvjzVsPJjJGVvVZs
ShphRpwzMWdpHdwWHwMpnHwLDmmgcLCCDtLDCCSlcgcfCD
ccqqLLqCqTSlZMLQMllZTvnNfjddttmmDpRJjvhfpfthRmdf
rbVssWwggFrGsWzPbVFGJpftQRPDmQDpdPmdJmfR
bBHWWHzWHWWHrsVbsFgwbFqqMLTnBclTMMSnLnqLqMQZ
CcSPGCCPrdPtdjcsBLDghbVLhqDl
vMJwTHzPvzVwqBBDblls
QNvMFfRMJHPZHjnfWmdftSjSnp
dnBCPhhBCrQfChdbNVGLszzDzVDsTbWT
HgcJgpppPqqHwPwJSczVzDssNNVWTtqVVGts
JHRFpjFccplcRwPJpHPScpMPQmCdBQQfQjjhCfBCrQQvdmnn
rQGmVRLRbDRHmmZLGBGVLHBVFspSstWWWNJcsgpQTSsNppJS
qlldhPdfCgnspJFWCFsFNT
jMMzwndfhnwPfqPMjgjMVBrGBmrHDHLZbjRGHbHj
wzpZfzHRSRfzgHfffZwwStCtSrBhBBCTrtFhhBFG
QPjQQQDcDWJNFWtrtWrGmTCMtmBW
lDvvDQcdjQcQLvlDwnpFgbbznZZglZsl
RfMFTMFrVrSRFPlFSfVlHpLqgzpHBLzHBBVzVpHG
CchbhcwdmdJmwJJtGgnqzppLmGGBQqQp
hCsstCJwLvMRvsZsTR
fQlfMlNClQhhZhrlWrWw
njDbnTDTBtGjmrGvSh
bgshBdBcDbTTdnnnTqcqLgqfpfQppCsCMsHHVVpHHNCHFF
PbCnTbzJnqQNzbbTNDdpwcmjDmwjGQjccw
hWgvSdLvwcGjSpSm
vVfrFvvhHFTZndJq
FFvRVCRqVRcfsDLrgqGNWjjHfhQQzGWjQHzN
ppJPBwplwSBJTmPpTzWWStzHHjNNLNzHNh
wnwMPbLJMJllJJwBmJmnLVvCvsCsbFgDrRrsCsvrqc
jqHgVgdgGQttWCtNqNflmllgFnfDnmFFlpcl
TZZsrrwwhwrsrZRGmhcfSnhGlmSFcf
rsLvvbJPPLBGPCQqHWtMCMHN
WzzBpCBpMsBpCvCfsgnPPfHgbfFNfF
jtdTLLjGTGjDjLbbbGlDLLLmfFgmmfgrPrgmNPHSnnNnqFSq
jbRRbjlwlRVpvWwvzBpB
qpwzCzCznFznTcCvrcrvVcLb
cPmNMHSlMsLfvWgsrWvL
mMHGPDMBGSGPHlPBcBPzznnzpdQFBjqRFdwdnn
QGZLJzmJrZgZzZhNQFqDWlWPWDFCWNRlPW
hMMbhVbhHWCsPWCMRs
BwjbSHVBVvfcTfZgZzQhrzdGrt
cvPTjfDPpDmmBjbQjZMdlBZj
CHNnghNChVzNgrFVwCMJLMMMMMQQdbLZ
FNSzShrHhNnWgVnWfvfbpfpDGTfvsG
FFpVrZhpTlSQlQzTtRtZHfmPmJDbRtZJ
jNnwBLnWwBgNBNCwsNgsMsCLVfDWfmDJRffmRRtmfRmPDRtR
BnLdNdjnBNcLngdCVBndgllFlQrrpQlSSFrQphFcQq
JmVLJPMNjmVJpMLJSVmNQZZQZZrnTHqZQHTrTTMr
ltfdwChhwRdRswDDdnBQqqWNTqrrHrqZRr
dwdwwDwsGlhhDFtsCwhsJLcPmGPcGzSjSjjLzNPS
QgSbgQCLQSJFMccLFLVVzH
WBNffrBpBNdNRdWDfptBtdzWcMZZVPMVwHMmsVHFccHsDsVc
ptphRWrfGRGRnqlCSQvhqbCzJS
VvdMLMLMBMlVlVschsNpDGpdNsGc
tqFSmnmnnttGfDqNcfvNDD
nzRHnrwrrWRrrzHtbMlTMBjCvWLgBBMl
pCBlRvzwzlCzvZqqDwzmvgtsLsQdgZsgPNtdrsWrst
JbGjbGVGHSFbhbnhTShSTbQtQrPsLsHLQgNRtsgdQsLP
GnnbJbGMGbSjjbSbCzqlwMRRDzqzMBBv
TTVRJVMWMshSQtjSVTQJRQlcCBncJccdppnJcBBDngFpgP
frvfzfHrwzZNrtNwzzzZncCCZFdFFCgBDpPcBcBg
LwNGbqwvmvvtbNQjQlVVRWTGTQWM
RnggwVLRLDfCVZhfpDGGMGMGcGzGNHvv
jmmWBTSsBmFmSzctsqpccHvzpN
SBSrTblSQPbQhNwwZfPVdZPf
CCvCwzfNStLzfrbmMJbZMtlsbJMW
gPPPBqDjBcPFpVgBRbnMsVsbJZnWsdbSbM
qgDPHjHcPhpDRRpPBRpCGSLwvHQwGfzrHLGLTL
CLGqDZZLTdddPsdJpq
gbRbbnghnrWvgrdJdSTRSsVNJlld
hMnwrjnnjggvnLDwGffTfwCZZZ
NzJHbNHNNzJzgmHmzpQSvvLqbLsVVsVGvB
WtWhtWDdrZldDWrWTlZgppVVsqQTVQBqsGqBsQVp
jWjWRRRlPcHRwJgw
CCnnFTmnPCMCRNfnwGwdfzvwwl
VQQVShDSSshhDDtDLhjccGjLBBzBzlZflNZvwZzdwBzpSNNZ
QLHhJDDhDhgscgtjbGHTrWbrTbRmbFrm
CJbLvJvbwtFHqvLzwJqqqtHWTWRgDScDRSWQQjTRcWRDLT
mssGsMNphZMNsPPBnhSjRgdnQRdWgdjgrcDn
GGmBMMsffmslMGshZlMphGqCzHCbzlbvzqwzzgFJggCF
WCgWBphpWLQZQpgdhGdwmfbfFRVRjRTbbSFttdbSbT
qqrZnDNqZJDTVzRjVFbfSN
rPMvqJJqrJMPJnZMZZgLPgLWLggWQghwhmBh
CWGGzdHHmPPSmPsC
LqwlZwRLrPMQlMqrlbZrQRsSNsmssSNSsNcBNpgmsJ
lwLDQhrDMQqPGfhzGGjhGn
ZqDlZssCqJJMvpdBpBBmBQSMRp
wLgVcbgFLzTLTNNZmNNRdjdRmF
HZHbctWTwgVWgsfrnnPqlnsWlD
RSnwSPFcLnFPnRwjzctzbGNlZgNbbGdGpLhZdpgM
BqqBfMvTmmJqDgGNVdGVbVJJZG
vsTDfqBmHmMWQCwjtrHjjSFFnRSn
LsCmmcDHRjdtNMstwwzJ
TvThqfBFBNTnnndTtL
lvGQfbFQGblFrRccLRSSlPPVHS
qbLpqTHSqpbqbrPcQgjPDjcdDL
gnzhhBBwBWZzMglmjDrDPjvfdvQPdwtd
WZZzZZlZmhsMmFgRBBBzHHJpNJGVRSJVGTVpNqCH
JDphhGhDdGzWRBnvqqLDNLMnLw
gsrTHHffTHPcrPrlHCNZhvBZnZNLhPvBNwvh
sHVCSsSghJpSJjQh
JTMGlfjlTdqjnqbnqFwqmnbQ
PBZhBBcWRZprPZcZDDCZTZRgnnzwbbsbnvhbvznFsNFFvvNQ
BcWrVgCCZTDRDrlGttfVtMddSJlH
vwwvpVbSvnSRRmfMCmTHVHTBHB
QLZgDPgSDgGTMZfmTTBZ
QDDsQFDlzlgtJlLdFDgSJQFvvpRvjqzjRwwwzWvhvWwqjj
mRRTGGNNflGRGGmmgRblsGwCZwVZlZjVwjztpjZhpBCB
PMLLFLHPLPnLqDDLvFDrzzMjhwVCjtphBzjMhV
FDdSPSpLcDsNRRWSTNWN
STldJthdJbtTqljCRDDHmqmj
VVvNwwvNFssJFJPNNwVvRMCgCgDqjjjqrDqqMHqP
QBZwQfZwfVhtcSBtBJnT
TzjjPzsQTslNlNzPRVGJJJGGtTJmgJHtmTZC
dBDWScMBhhPGgdwwJPfw
SqSqbSPDBhqnMqvrrSWVNFpRVRLzVQslvpNjVL
bWFgFCPFtgvDZWgtChDNFJHvGVzHHpjzHnnzGzzHRR
qcScQbbmqdQmlQmrlcQwLmHlRRjzGHnHJnnGVjHzBHzG
TqQwmLmfcddfwrfCgbWCNPsZNfCb
pddprrtrCPdvJdMjwwwHnLwwjLWCLg
qhzZTmZcmRhmpFlVHcQQVwWQHVQwnH
lGmhfRfmBZRlmmbvDPBMvNbvJJpP
NsptgfGLLNwnNQSZbCvZnRnMCb
JldhdzwzBMCSZvrz
JFcdWTdwhPTFVDVmTJNqmstLqgLtLtjGGpsG
dVVTSgTDpHVDjgdWpdpHTZSbWGrnnvrNwzFGNrFwnNNwvh
CPRlMPJcMQcBcsmmLCMPrzbFfhwfrvLrNNwwGwfF
CRJmtbmJlQbsQlRBpZDVjTHTdjDtSjZt
rQVJrRFdrwDfzHQHQBTnpWTW
PCLbPcPCsgqCgPgLjScSqNbHTzMtWmWtzlTHmBtTlMssMT
cCqghSSPcvgScPbwFGdDDVZFfDhZGB
zrRQRdqzPHQtnMPrtzPMRRQMVBBblJJBSClBpJbpdCCbBlCC
hTcGwzswGwGmGfDvvfGmGNfBpllVSWbWppNCBNBVpCBClW
gvGFTmTgwDhTDccsTfzfmfGGQPgPPqrgRZPHnRqRZrQLnRgP
hvmmJllPbmCRMNGMMlNwNl
PFTpTVjTgpTpBRgMGMnRNHBB
WWrqzTTPVQDPqpjTqPJbmLtcfsQsftbLbvct
SzrmpjjcsjTZNzgnnNzN
BLHNDwBLBPLwLBhwDVLgdQCgCQGTngHQZCngZd
PPJBDvBVVBmppNjJjrrr
ZHBNQFhsqHBsgCfqtctcPvSwPqrV
LlnGTnJpJJTmdDpmLlmLndWfVrPvvRwDfcwwwRVwcfQtvP
GnbQblWmWGdTJQdTGnZHsHhZhFNsbCsjFgjC
hWfDzDTVndDMhddMlBWMBDfJRnRtvvSSQjCvZCtjtpJvSR
bGHsccFcbscsqGPHNGcrpjJZtvSRtFtQCZrjSj
GsbwGGwNNGLgPLwMzBzfMMVMTLdTCC
GBcNzTSSmGzmTLNgvwgpNCDqpDggpw
JRZMrJWFZZnZtJgvvjwbpbCJDd
rFMPRhZtZFnWrRtQGmPPDcLfmGLTfz
VdWnVdjhhdFjVWbndMlNLQspVMHCNVlClV
RSrJBRRJwJSBQpMBHLLDCL
TqwtRRRJzJTSqJSzSrtmqgWWhcncvPgnWbPQnbnWmb
VnDFpPpFssVSpFDVHbRbscCvgbMTvTCR
JfzqdQBfhBdddfBBGDLdGQvbrqMMcCRRMTgbqgMrbbqc
QDfzJNWBJLQBhmdGDzDGhQGGlFZwPtWjtFFppllSVpZZFnjj
qrLLNpJbJnRLNnpvQtRVhhRFCdlFFlFd
mmjzjvGjwPwmTsSTSQjDVlVWQjlCDthCCC
cSSmcTTPcSswScfSHmTSTzJqqNrnpBpqBbJLvZMrqfrL
NSvRZRfFvfHSZQcNJBLbzDLnrDFnhtFLFnrh
wmTGpmGCwsMplMsHllPlMnDLjznrgrzDjgnntznr
dsCVGGGwmpTGPplmCmPppVmHSSRJNfJvBNZQfWdBRJZRBZcR
TwQwqDPQtwNwzNDTZcnZbJvMnMMbFqZM
SzGSjrjLWrjHHspWVhvVVnFJbccVZcRJbllb
pHppszGSprhhWHLCLrsjdTtDDPfwdfwtdNfDgNCN
ftcvBtBFtmBlmvPFmmcczCChrgSCzzCSnCSSnGHf
sJddbdTDbDHdnJRggrGzGzrG
dppDVDZMMMsTTVsDTsTDpwVctNcvBZQPcPctqtQcHmvlvQ
jzbdzztbDqNqwvLvRmQZjvRH
FSJbFFWgJnZFLRZmHmRQ
TgVJTVSJGJcJlllgTMdqpdNsrztNNsNbMDDp
CCCVWbwVnlRbTcqSShqGhhGcnF
PgDBfDpMNlfgpPfNZZtcJgcqqhmmjqSmjFmhmS
tpfpsPrlpsPDDMDfBZrwLrVWLLLWRCdHLTwbVR
pjvfDGjSMpvDmDpDpSDnJmfqbPVsCMFsPqFVPqCrwrbMFV
NQlHtHNhZHgZZNBHhQgzPmCwbqqVFlsrPFrFCP
hgHtQdQchcHctHgcgNgBQdWNpmvTWvpGmLJDLGjTpLGnnjfv
QhgLLLmtlRqDtRGP
HLbnCZFWVHLZnFCJJRFrGJzDGDGJDD
WZHfndfMfCZbMnTVTfZhSNQQpdwSdLwhNcmdSN
sPwrPMgLFPFFsLZtmcclSSZDtcZs
qVzqdNdCnnNVVNCGmbncDBlmBlBBnRlZ
VTdCGVvVfffrjpfMQPwm
BPDldDTDPZcggjcccTdNMbbMNSQNqqjtzMbrRb
LvmWsfvssLGnQbQMRQqrSRnz
WpvsVmmpmmfpfJGrHfVCHVvmcDgpDlZphgFgdhclhdgdBlgF
VGwHbNzMMrzHbbHChhqgCqPNghgCqW
ZJVBvBvZWqvRvggP
JBJlBlBZcsBfcJVrHnLwQQGzLQMc
gBWfBPPPfhvVWFfSVfVdjjbvTvwwQppHcHcctTcQTHcZ
DnNnMJMqMJzqchbZtTQQrb
llRmNLDLDGlCsWSFCffWdshd
LpNMZZpqqpfTTwNqLZwGsZqZbdHRHbHGddnCBHRcmzGmmCdG
JFRtRlVStjPlhtjbBzBncmVWdzWBnb
rPhhSlrvQlFFFPgtJlJtFlhlDNTwRMfZTZfDZNrspZLMMsrq
zBLjLFBjLjmHWlzNZlzVCC
dcJrdfddbllJbdMTwDNMZWNVwVDwHT
gRcgJbcbqfgbftdjlqLhFFLPPhGBjm
WfBgBRzQGNNQqmmqZN
nFjCjCpLbtpPJtCDDnCDJpzncrSVbmdVqbhhdqNbSSmrdVSq
CLPJpDLlLlFDpFjjsGRsBGRfWwsHHglz
lSlSlpCRSsWTRLTlWRvlmMrBPjBPjpqrrmqPJMPZ
DDzbhVhQhDGzhQnGGfnHHQGBPZjMqJjBJMBVJmqMdrqqdT
NNGQbFwnHzNzwbQwFnwbfsLCLtsvLsWggFslsTggSc
nvzPvCnlvtwCrZWmWwvvZCQfbbfQfGbqSJJGmqGSFSbJ
LhTBWdsMNNRgNcgDWsDNcVSfQqJGFSFJqSSddQGSJF
HNgchHcWDRNhTNMWwtPrtZZjnHzrnvCz
djhnzRghMMVCBfhh
qjQTrTPQJCDDqBDJ
LQvGrLjTHLjNNPPTpQgtztSmmbFgmgLbFnmL
FRDNFBBRRVFFmbLZHPZBZvvH
QnhgMllglJTdGgJnhLQQJpZpvwZHpwsPTwpbsZHmsH
lnhnQGrMgthMlntlGfQhgWWcRSDcVCrLWzRSrRFDRN
PqrrrRnPBbrVhVqFrFVRPVhZLvNSNvLZcQvtJfRvNScJNJ
dDzWwwCTmmdwdddpDLWQZMSSMfSJtcWJfQSQZN
CCwmTdjsClVjFjnLBl
srjCvjPmQVlPjFPmQmPrdHHZhvHZDqHhDDwHHqfB
pLcnJQNQMZpqZDDZ
WNRbtNJgRPjjQVmz
NJJRmjmJbbJfqSVMNHFCSFzLLlrLLrFHTz
QvnsQGvBwWwQvgRHlGGDFPFCGlrR
QhvwBvBctBccZWZNRNmVfjpmjJjb
RMmGGMLRRCFmRPPfGFpGPFPJWZQWctrtlQvZvltfrQWcWWBq
gggwjjbjwwbZtwZBBcmQQv
SdNbDDVSgPMFmPzdMm
nZhnNZDnZPmZPWbppPpMlvRlzvrtMmRtqRzRfq
HcFwsCQLVQwFwLtLbvtzrlrLtt
GsgCFCgCQHHCVHsFQHcFdDPDbJDZTpZDbWJPNWWZDd
BBrBrGlGpgGjsNhlBlpBwpfSwZJdQwfcZwvSQnnn
LvWvHLmmVJQQHfQH
RPLRMvqFTbRTjGBhjNFsslls
cNZZZmZDcDDJmhzzrrlHtSbvgjSvgfPSWvPfjShv
VBwnndnVCqbqpRRpnspnqRWtGgWSSgvFBSGGSWgtGGSP
LqCMnTLVRwCRCpRLpbHDNzMMNcmmHNHQJQ
MMqDtnVnBlHtZvtB
WLWrWgdWwdrLCTFCwLlbbsJsJQsbQlQzlvrB
jFSvTdjfnfRmVcRR
ZLGqnvnqLzvbGRMfcRpwMpdV
fgfNNfgHHjVmRcVdgM
HsWDCDfCQCZBBZnvWtLq
bTZjqflqZhcrlczGzppGNgjmFNnp
PmmRSWWDMBQVNpWFznGF
SStRBDSCCSSSwPBwBDBwPmZhZlfZhqHTsTfltHHZfsHH
GbNbsSptQGqsdJCzsddcgzzv
DHRRnmWWmZnmRhllnHnnnMLvvLgcTVvjVhCTvgzcJgLj
RnWMlDZRlnHlmHWBFwGQqNGGPNQzPGqFwz
vSGvHpJnBLbGHBNCgfDzzChDgbCfzT
wFRslqmqTRgggQghPmQf
qjRFMjWqNNMMGHTL
fWGcQGGSRFQZhttZJfSSJflDDrwdClljVrNDdrdCFBCr
MTgvLLPPnHzMbDwdlNbMBwMM
mnTvnnPTcNmmJJWN
qqbbQQnbWrqGgnWqvZpVzMCZjCgfjZCSVM
ldcmDPDhmlFBHPDddLBVFDHLppZpjSCjjNfwNMwCpSMwhCMp
FtDdsHPcHmdHVPLtHsdtBHQnsbvnTRRTRsRRqbqvqWnJ
hhtBtPrgbbhhgjZjjCCHHNpNDHpffHWCvr
LGFLVwswsJMSgFwMMpddSvpHCCdDdvCpvm
sGsFsQLsVsLFnnFTJQthjcjQqhRcBZZtRg`;
